{
  "$schema": "http://json.schemastore.org/sarif-1.0.0",
  "version": "1.0.0",
  "runs": [
    {
      "tool": {
        "name": "Compilador do Microsoft (R) Visual C#",
        "version": "4.4.0.0",
        "fileVersion": "4.4.0-6.22580.4 (d7a61210)",
        "semanticVersion": "4.4.0",
        "language": "pt-BR"
      },
      "results": [
        {
          "ruleId": "CS8613",
          "level": "warning",
          "message": "A nulidade de tipos de referência no tipo de retorno de 'Task<ActionResult<ToDoListModel>?> ToDoListService.PutToDoListModel(long id, ToDoListModel toDoListModel)' não corresponde ao membro implicitamente implementado 'Task<ActionResult<ToDoListModel>> IToDoListService.PutToDoListModel(long id, ToDoListModel toDoListModel)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Services/Interfaces/ToDoListService.cs",
                "region": {
                  "startLine": 59,
                  "startColumn": 57,
                  "endLine": 59,
                  "endColumn": 73
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8613",
          "level": "warning",
          "message": "A nulidade de tipos de referência no tipo de retorno de 'Task<ActionResult<ToDoListModel>?> ToDoListService.DeleteToDoListModel(long id)' não corresponde ao membro implicitamente implementado 'Task<ActionResult<ToDoListModel>> IToDoListService.DeleteToDoListModel(long id)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Services/Interfaces/ToDoListService.cs",
                "region": {
                  "startLine": 19,
                  "startColumn": 57,
                  "endLine": 19,
                  "endColumn": 76
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8618",
          "level": "warning",
          "message": "O propriedade não anulável 'ToDoLists' precisa conter um valor não nulo ao sair do construtor. Considere declarar o propriedade como anulável.",
          "suppressionStates": [
            "suppressedInSource"
          ],
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Data/ToDoListContext.cs",
                "region": {
                  "startLine": 10,
                  "startColumn": 12,
                  "endLine": 10,
                  "endColumn": 27
                }
              }
            }
          ],
          "relatedLocations": [
            {
              "physicalLocation": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Data/ToDoListContext.cs",
                "region": {
                  "startLine": 15,
                  "startColumn": 41,
                  "endLine": 15,
                  "endColumn": 50
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "CS8604",
          "level": "warning",
          "message": "Possível argumento de referência nula para o parâmetro 'value' em 'ActionResult<ToDoListModel>.implicit operator ActionResult<ToDoListModel>(ToDoListModel value)'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Services/Interfaces/ToDoListService.cs",
                "region": {
                  "startLine": 42,
                  "startColumn": 20,
                  "endLine": 42,
                  "endColumn": 33
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S101",
          "level": "warning",
          "message": "Rename class 'ToDoListDTO' to match pascal case naming rules, consider using 'ToDoListDto'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Models/ToDoListDTO.cs",
                "region": {
                  "startLine": 5,
                  "startColumn": 18,
                  "endLine": 5,
                  "endColumn": 29
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3251",
          "level": "warning",
          "message": "Supply an implementation for this partial method.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Data/ToDoListContext.cs",
                "region": {
                  "startLine": 29,
                  "startColumn": 5,
                  "endLine": 29,
                  "endColumn": 12
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S3251",
          "level": "warning",
          "message": "Supply an implementation for the partial method, otherwise this call will be ignored.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Data/ToDoListContext.cs",
                "region": {
                  "startLine": 26,
                  "startColumn": 9,
                  "endLine": 26,
                  "endColumn": 46
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        },
        {
          "ruleId": "S1481",
          "level": "warning",
          "message": "Remove the unused local variable 'tag'.",
          "locations": [
            {
              "resultFile": {
                "uri": "file:///C:/Users/Leandro/ToDoList/ToDoListSQlite/Controllers/ToDoListModelController.cs",
                "region": {
                  "startLine": 56,
                  "startColumn": 21,
                  "endLine": 56,
                  "endColumn": 24
                }
              }
            }
          ],
          "properties": {
            "warningLevel": 1
          }
        }
      ],
      "rules": {
        "CS8604": {
          "id": "CS8604",
          "shortDescription": "Possível argumento de referência nula.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8604)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8613": {
          "id": "CS8613",
          "shortDescription": "A anulabilidade de tipos de referência em tipo de retorno não corresponde ao membro implicitamente implementado.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8613)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "CS8618": {
          "id": "CS8618",
          "shortDescription": "O campo não anulável precisa conter um valor não nulo ao sair do construtor. Considere declará-lo como anulável.",
          "defaultLevel": "warning",
          "helpUri": "https://msdn.microsoft.com/query/roslyn.query?appId=roslyn&k=k(CS8618)",
          "properties": {
            "category": "Compiler",
            "isEnabledByDefault": true,
            "tags": [
              "Compiler",
              "Telemetry"
            ]
          }
        },
        "S101": {
          "id": "S101",
          "shortDescription": "Types should be named in PascalCase",
          "fullDescription": "Shared naming conventions allow teams to collaborate efficiently. This rule checks whether or not type names are using PascalCase. To reduce noise, two consecutive upper case characters are allowed unless they form the whole type name. So, MyXClass is compliant, but XC on its own is not.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-101",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S1481": {
          "id": "S1481",
          "shortDescription": "Unused local variables should be removed",
          "fullDescription": "If a local variable is declared but not used, it is dead code and should be removed. Doing so will improve maintainability because developers will not wonder what the variable is used for.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-1481",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "TestSourceScope",
              "SonarWay"
            ]
          }
        },
        "S3251": {
          "id": "S3251",
          "shortDescription": "Implementations should be provided for \"partial\" methods",
          "fullDescription": "partial methods allow an increased degree of flexibility in programming a system. Hooks can be added to generated code by invoking methods that define their signature, but might not have an implementation yet. But if the implementation is still missing when the code makes it to production, the compiler silently removes the call. In the best case scenario, such calls simply represent cruft, but in they worst case they are critical, missing functionality, the loss of which will lead to unexpected results at runtime.",
          "defaultLevel": "warning",
          "helpUri": "https://rules.sonarsource.com/csharp/RSPEC-3251",
          "properties": {
            "category": "Minor Code Smell",
            "isEnabledByDefault": true,
            "tags": [
              "C#",
              "MainSourceScope",
              "SonarWay"
            ]
          }
        }
      }
    }
  ]
}